{"ast":null,"code":"import _toConsumableArray from\"/home/joaofelipe/joaofelipelliccione_projetos-trybe/2-Frontend/trybe_frontend_3-tryunfo/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/home/joaofelipe/joaofelipelliccione_projetos-trybe/2-Frontend/trybe_frontend_3-tryunfo/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/joaofelipe/joaofelipelliccione_projetos-trybe/2-Frontend/trybe_frontend_3-tryunfo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/joaofelipe/joaofelipelliccione_projetos-trybe/2-Frontend/trybe_frontend_3-tryunfo/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/joaofelipe/joaofelipelliccione_projetos-trybe/2-Frontend/trybe_frontend_3-tryunfo/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/joaofelipe/joaofelipelliccione_projetos-trybe/2-Frontend/trybe_frontend_3-tryunfo/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Header from'./components/Header';import Form from'./components/Form';import Filters from'./components/Filters';import Card from'./components/Card';import Footer from'./components/Footer';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var INITIAL_STATE={cardName:'',cardDescription:'',cardAttr1:'0',cardAttr2:'0',cardAttr3:'0',cardImage:'',cardRare:'Normal',cardTrunfo:false,hasTrunfo:false,isSaveButtonDisabled:true,savedCards:[],searchBoxData:'',rarityFilter:'Todas'};var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.verifyAllInputs=function(){// Função que habilita o botão 'salvar', quando todos os campos do formulário forem preenchidos corretamente. Será chamada dentro da função onInputChange(), que é chamada dentro de escutadores do tipo 'onChange'.\nvar _this$state=_this.state,cardName=_this$state.cardName,cardDescription=_this$state.cardDescription,cardAttr1=_this$state.cardAttr1,cardAttr2=_this$state.cardAttr2,cardAttr3=_this$state.cardAttr3,cardImage=_this$state.cardImage,cardRare=_this$state.cardRare;var attrSum=Number(cardAttr1)+Number(cardAttr2)+Number(cardAttr3);var attrSumMaxValue=210;var attrMin=0;var attrMax=90;if(cardName.length>=1&&cardDescription.length>=1&&cardImage.length>=1&&cardRare.length>=1&&Number(cardAttr1)>=attrMin&&Number(cardAttr1)<=attrMax&&Number(cardAttr2)>=attrMin&&Number(cardAttr2)<=attrMax&&Number(cardAttr3)>=attrMin&&Number(cardAttr3)<=attrMax&&attrSum<=attrSumMaxValue){return _this.setState({isSaveButtonDisabled:false});}return _this.setState({isSaveButtonDisabled:true});};_this.onInputChange=function(_ref){var target=_ref.target;// Função que altera o valor de qualquer estado, sempre que um input for realizado no elemento onde ela está sendo chamada. || OBS: Para que tal função funcione, os 'name' de cada um dos elementos do Forms devem ser iguais ao nome dos estados.\nvar name=target.name;var formElementValue=target.type==='checkbox'?target.checked:target.value;_this.setState(_defineProperty({},name,formElementValue),_this.verifyAllInputs);};_this.onSaveButtonClick=function(){// Função que altera o estado 'hasTrunfo', de false para true, quando uma carta do tipo trunfo é salva.\n// Função que salva as informações de uma respectiva carta, como um objeto dentro do array contido no estado 'savedCards'.\n// Função que limpa os campos do formulário e o preview da carta.\nvar _this$state2=_this.state,cardName=_this$state2.cardName,cardDescription=_this$state2.cardDescription,cardAttr1=_this$state2.cardAttr1,cardAttr2=_this$state2.cardAttr2,cardAttr3=_this$state2.cardAttr3,cardImage=_this$state2.cardImage,cardRare=_this$state2.cardRare,cardTrunfo=_this$state2.cardTrunfo;var savedCardInfo={cardName:cardName,cardDescription:cardDescription,cardAttr1:cardAttr1,cardAttr2:cardAttr2,cardAttr3:cardAttr3,cardImage:cardImage,cardRare:cardRare,cardTrunfo:cardTrunfo};if(cardTrunfo===true){_this.setState({hasTrunfo:true},function(){return localStorage.setItem('hasTrunfo',true);});}_this.setState(function(prevState){return{savedCards:[].concat(_toConsumableArray(prevState.savedCards),[savedCardInfo]),cardName:'',cardDescription:'',cardAttr1:'0',cardAttr2:'0',cardAttr3:'0',cardImage:'',cardRare:'Normal',cardTrunfo:false,isSaveButtonDisabled:true};},function(){return localStorage.setItem('savedCards',JSON.stringify(_this.state.savedCards));});// Salvando o estado 'savedCards', no Local Storage.\n};_this.deleteDisplayedCard=function(_ref2){var target=_ref2.target;// Função que possibilita a exclusão de uma carta criada anteriormente.\nvar savedCards=_this.state.savedCards;var displayedCardId=target.id;var toBeDel=savedCards.find(function(cardInfo){return cardInfo.cardName===displayedCardId;});// Retorna o objeto com as informações da carta recém-excluída.\nvar newSC=savedCards.filter(function(cardInfo){return cardInfo.cardName!==displayedCardId;});// Retorna o array contido no estado 'savedCards', porém sem o objeto referente à carta que foi excluída.\nif(toBeDel.cardTrunfo===true){_this.setState({savedCards:newSC,hasTrunfo:false},function(){localStorage.setItem('savedCards',JSON.stringify(newSC));localStorage.setItem('hasTrunfo',false);});// Salvando o estado 'savedCards', após a deleção, no Local Storage.\n}_this.setState({savedCards:newSC},localStorage.setItem('savedCards',JSON.stringify(newSC)));// OBS: Caso a carta 'Super Trunfo' seja excluída, além de atualizar o estado 'savedCards' com o novo array de objetos 'newSC', o estado 'hasTrunfo' voltará a ser igual a False. Isso é importante para que o usuário seja capaz de criar uma nova carta do tipo 'Super Trunfo'.\n};_this.filtersFunction=function(){// Tal função sempre retornará um array de objetos, que acumula informações de cada uma das cartas. Por outro lado, dependendo dos filtros aplicados pelo usuário, o respectivo array apresentará uma quantidade reduzida de objetos.\nvar _this$state3=_this.state,savedCards=_this$state3.savedCards,searchBoxData=_this$state3.searchBoxData,rarityFilter=_this$state3.rarityFilter;if(searchBoxData.length>=1){return savedCards.filter(function(_ref3){var cardName=_ref3.cardName;return cardName.toLowerCase().includes(searchBoxData.toLowerCase());});// Retornado quando o usuário pesquisar por uma determinada carta na searchbox.\n}if(rarityFilter==='Normal'){return savedCards.filter(function(_ref4){var cardRare=_ref4.cardRare;return cardRare==='Normal';});// Retornado quando o usuário selecionar 'Normal', no dropdown.\n}if(rarityFilter==='Raro'){return savedCards.filter(function(_ref5){var cardRare=_ref5.cardRare;return cardRare==='Raro';});// Retornado quando o usuário selecionar 'Raro', no dropdown.\n}if(rarityFilter==='Muito Raro'){return savedCards.filter(function(_ref6){var cardRare=_ref6.cardRare;return cardRare==='Muito Raro';});// Retornado quando o usuário selecionar 'Muito Raro', no dropdown.\n}return savedCards;// Retornado quando o usuário não aplicar nenhum filtro.\n// OBS: A função filtersFunction() será chamada dentro da <div><div /> \"cardsDisplay\", acompanhada de um .map().\n};_this.state=INITIAL_STATE;return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var userSavedCards=localStorage.getItem('savedCards');var userHasTrunfo=localStorage.getItem('hasTrunfo');if(userSavedCards!==null){this.setState({savedCards:JSON.parse(userSavedCards)});}if(userSavedCards!==null){this.setState({hasTrunfo:JSON.parse(userHasTrunfo)});}}},{key:\"render\",value:function render(){var _this2=this;var _this$state4=this.state,cardName=_this$state4.cardName,cardDescription=_this$state4.cardDescription,cardAttr1=_this$state4.cardAttr1,cardAttr2=_this$state4.cardAttr2,cardAttr3=_this$state4.cardAttr3,cardImage=_this$state4.cardImage,cardRare=_this$state4.cardRare,cardTrunfo=_this$state4.cardTrunfo,hasTrunfo=_this$state4.hasTrunfo,isSaveButtonDisabled=_this$state4.isSaveButtonDisabled,savedCards=_this$state4.savedCards,searchBoxData=_this$state4.searchBoxData,rarityFilter=_this$state4.rarityFilter;return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"section\",{id:\"cardDevelopmentContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"formContainer\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Estruturar Nova Carta\"}),/*#__PURE__*/_jsx(Form,{cardName:cardName,cardDescription:cardDescription,cardAttr1:cardAttr1,cardAttr2:cardAttr2,cardAttr3:cardAttr3,cardImage:cardImage,cardRare:cardRare,cardTrunfo:cardTrunfo,hasTrunfo:hasTrunfo,isSaveButtonDisabled:isSaveButtonDisabled,onInputChange:this.onInputChange,onCardTrunfoClick:this.onCardTrunfoClick,onSaveButtonClick:this.onSaveButtonClick})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"cardPreviewContainer\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Preview da Nova Carta\"}),/*#__PURE__*/_jsx(\"div\",{id:\"cardPrevOutsideBorder\",children:/*#__PURE__*/_jsx(Card,{cardName:cardName,cardDescription:cardDescription,cardAttr1:cardAttr1,cardAttr2:cardAttr2,cardAttr3:cardAttr3,cardImage:cardImage,cardRare:cardRare,cardTrunfo:cardTrunfo})})]})]}),/*#__PURE__*/_jsxs(\"section\",{id:\"savedCardsContainer\",children:[/*#__PURE__*/_jsx(Filters,{searchBoxData:searchBoxData,onInputChange:this.onInputChange,rarityFilter:rarityFilter}),/*#__PURE__*/_jsx(\"div\",{id:\"cardsDisplay\",children:savedCards!==undefined&&this.filtersFunction().map(function(cardInfo){return/*#__PURE__*/_jsxs(\"div\",{className:\"eachDisplayedCard\",children:[/*#__PURE__*/_jsx(Card,{cardName:cardInfo.cardName,cardDescription:cardInfo.cardDescription,cardAttr1:cardInfo.cardAttr1,cardAttr2:cardInfo.cardAttr2,cardAttr3:cardInfo.cardAttr3,cardImage:cardInfo.cardImage,cardRare:cardInfo.cardRare,cardTrunfo:cardInfo.cardTrunfo}),/*#__PURE__*/_jsx(\"button\",{id:cardInfo.cardName,className:\"deleteBtn\",type:\"button\",onClick:_this2.deleteDisplayedCard,children:\"Excluir\"})]},cardInfo.cardName);})})]})]}),/*#__PURE__*/_jsx(Footer,{})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/joaofelipe/joaofelipelliccione_projetos-trybe/2-Frontend/trybe_frontend_3-tryunfo/src/App.js"],"names":["React","Header","Form","Filters","Card","Footer","INITIAL_STATE","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","cardTrunfo","hasTrunfo","isSaveButtonDisabled","savedCards","searchBoxData","rarityFilter","App","verifyAllInputs","state","attrSum","Number","attrSumMaxValue","attrMin","attrMax","length","setState","onInputChange","target","name","formElementValue","type","checked","value","onSaveButtonClick","savedCardInfo","localStorage","setItem","prevState","JSON","stringify","deleteDisplayedCard","displayedCardId","id","toBeDel","find","cardInfo","newSC","filter","filtersFunction","toLowerCase","includes","userSavedCards","getItem","userHasTrunfo","parse","onCardTrunfoClick","undefined","map","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport Filters from './components/Filters';\nimport Card from './components/Card';\nimport Footer from './components/Footer';\nimport './App.css';\n\nconst INITIAL_STATE = {\n  cardName: '',\n  cardDescription: '',\n  cardAttr1: '0',\n  cardAttr2: '0',\n  cardAttr3: '0',\n  cardImage: '',\n  cardRare: 'Normal',\n  cardTrunfo: false,\n  hasTrunfo: false,\n  isSaveButtonDisabled: true,\n  savedCards: [],\n  searchBoxData: '',\n  rarityFilter: 'Todas'\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = INITIAL_STATE;\n  }\n\n  componentDidMount() {\n    const userSavedCards = localStorage.getItem('savedCards');\n    const userHasTrunfo = localStorage.getItem('hasTrunfo');\n\n    if (userSavedCards !== null) {\n      this.setState({ savedCards: JSON.parse(userSavedCards) });\n    }\n    if (userSavedCards !== null) {\n      this.setState({ hasTrunfo: JSON.parse(userHasTrunfo) });\n    }\n  }\n\n  verifyAllInputs = () => { // Função que habilita o botão 'salvar', quando todos os campos do formulário forem preenchidos corretamente. Será chamada dentro da função onInputChange(), que é chamada dentro de escutadores do tipo 'onChange'.\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n    } = this.state;\n\n    const attrSum = Number(cardAttr1) + Number(cardAttr2) + Number(cardAttr3);\n    const attrSumMaxValue = 210;\n    const attrMin = 0;\n    const attrMax = 90;\n\n    if ((cardName.length >= 1)\n    && (cardDescription.length >= 1)\n    && (cardImage.length >= 1)\n    && (cardRare.length >= 1)\n    && (Number(cardAttr1) >= attrMin && Number(cardAttr1) <= attrMax)\n    && (Number(cardAttr2) >= attrMin && Number(cardAttr2) <= attrMax)\n    && (Number(cardAttr3) >= attrMin && Number(cardAttr3) <= attrMax)\n    && (attrSum <= attrSumMaxValue)) {\n      return this.setState({\n        isSaveButtonDisabled: false,\n      });\n    }\n    return this.setState({\n      isSaveButtonDisabled: true,\n    });\n  }\n\n  onInputChange = ({ target }) => { // Função que altera o valor de qualquer estado, sempre que um input for realizado no elemento onde ela está sendo chamada. || OBS: Para que tal função funcione, os 'name' de cada um dos elementos do Forms devem ser iguais ao nome dos estados.\n    const { name } = target;\n    const formElementValue = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState({ // Aprendi a utilizar o 2° parâmetro da setState() na matéria \"Ciclo de Vida dos Componentes\", ainda não dada. Em suma, assim que o estado for atualizado, a callback passada como argumento, será rodada.\n      [name]: formElementValue,\n    }, this.verifyAllInputs);\n  }\n\n  onSaveButtonClick = () => {\n    // Função que altera o estado 'hasTrunfo', de false para true, quando uma carta do tipo trunfo é salva.\n    // Função que salva as informações de uma respectiva carta, como um objeto dentro do array contido no estado 'savedCards'.\n    // Função que limpa os campos do formulário e o preview da carta.\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n    } = this.state;\n\n    const savedCardInfo = {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n    };\n\n    if (cardTrunfo === true) {\n      this.setState({ hasTrunfo: true }, () => localStorage.setItem('hasTrunfo', true));\n    }\n\n    this.setState((prevState) => ({\n      savedCards: [...prevState.savedCards, savedCardInfo],\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardImage: '',\n      cardRare: 'Normal',\n      cardTrunfo: false,\n      isSaveButtonDisabled: true,\n    }), () => localStorage.setItem('savedCards', JSON.stringify(this.state.savedCards))); // Salvando o estado 'savedCards', no Local Storage.\n  }\n\n  deleteDisplayedCard = ({ target }) => { // Função que possibilita a exclusão de uma carta criada anteriormente.\n    const { savedCards } = this.state;\n    const displayedCardId = target.id;\n\n    const toBeDel = savedCards.find((cardInfo) => cardInfo.cardName === displayedCardId); // Retorna o objeto com as informações da carta recém-excluída.\n    const newSC = savedCards.filter((cardInfo) => cardInfo.cardName !== displayedCardId); // Retorna o array contido no estado 'savedCards', porém sem o objeto referente à carta que foi excluída.\n\n    if (toBeDel.cardTrunfo === true) {\n      this.setState({\n        savedCards: newSC,\n        hasTrunfo: false,\n      }, () => {\n        localStorage.setItem('savedCards', JSON.stringify(newSC));\n        localStorage.setItem('hasTrunfo', false)\n      }); // Salvando o estado 'savedCards', após a deleção, no Local Storage.\n    }\n    this.setState({ savedCards: newSC }, localStorage.setItem('savedCards', JSON.stringify(newSC)));\n    // OBS: Caso a carta 'Super Trunfo' seja excluída, além de atualizar o estado 'savedCards' com o novo array de objetos 'newSC', o estado 'hasTrunfo' voltará a ser igual a False. Isso é importante para que o usuário seja capaz de criar uma nova carta do tipo 'Super Trunfo'.\n  }\n\n  filtersFunction = () => { // Tal função sempre retornará um array de objetos, que acumula informações de cada uma das cartas. Por outro lado, dependendo dos filtros aplicados pelo usuário, o respectivo array apresentará uma quantidade reduzida de objetos.\n    const { savedCards, searchBoxData, rarityFilter } = this.state;\n\n    if (searchBoxData.length >= 1) {\n      return savedCards.filter(({ cardName }) =>\n        cardName.toLowerCase().includes(searchBoxData.toLowerCase())); // Retornado quando o usuário pesquisar por uma determinada carta na searchbox.\n    }\n    if (rarityFilter === 'Normal') {\n      return savedCards.filter(({ cardRare }) => cardRare === 'Normal'); // Retornado quando o usuário selecionar 'Normal', no dropdown.\n    }\n    if (rarityFilter === 'Raro') {\n      return savedCards.filter(({ cardRare }) => cardRare === 'Raro'); // Retornado quando o usuário selecionar 'Raro', no dropdown.\n    }\n    if (rarityFilter === 'Muito Raro') {\n      return savedCards.filter(({ cardRare }) => cardRare === 'Muito Raro'); // Retornado quando o usuário selecionar 'Muito Raro', no dropdown.\n    }\n    return savedCards; // Retornado quando o usuário não aplicar nenhum filtro.\n\n    // OBS: A função filtersFunction() será chamada dentro da <div><div /> \"cardsDisplay\", acompanhada de um .map().\n  }\n\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      isSaveButtonDisabled,\n      savedCards,\n      searchBoxData,\n      rarityFilter,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Header />\n        <main>\n          <section id=\"cardDevelopmentContainer\">\n            <div id=\"formContainer\">\n              <h3>Estruturar Nova Carta</h3>\n              <Form\n                cardName={ cardName } cardDescription={ cardDescription }\n                cardAttr1={ cardAttr1 } cardAttr2={ cardAttr2 }\n                cardAttr3={ cardAttr3 } cardImage={ cardImage }\n                cardRare={ cardRare } cardTrunfo={ cardTrunfo }\n                hasTrunfo={ hasTrunfo } isSaveButtonDisabled={ isSaveButtonDisabled }\n                onInputChange={ this.onInputChange } onCardTrunfoClick={ this.onCardTrunfoClick }\n                onSaveButtonClick={ this.onSaveButtonClick }\n              />\n            </div>\n            <div id=\"cardPreviewContainer\">\n              <h3>Preview da Nova Carta</h3>\n              <div id=\"cardPrevOutsideBorder\">\n                <Card\n                  cardName={ cardName } cardDescription={ cardDescription }\n                  cardAttr1={ cardAttr1 } cardAttr2={ cardAttr2 }\n                  cardAttr3={ cardAttr3 } cardImage={ cardImage }\n                  cardRare={ cardRare } cardTrunfo={ cardTrunfo }\n                />\n              </div>\n            </div>\n          </section>\n          <section id=\"savedCardsContainer\">\n            <Filters \n              searchBoxData={ searchBoxData } onInputChange={ this.onInputChange }\n              rarityFilter={ rarityFilter }\n            />\n            <div id=\"cardsDisplay\">\n              { savedCards !== undefined \n                && this.filtersFunction().map((cardInfo) => (\n                <div key={ cardInfo.cardName } className=\"eachDisplayedCard\">\n                  <Card\n                    cardName={ cardInfo.cardName } cardDescription={ cardInfo.cardDescription }\n                    cardAttr1={ cardInfo.cardAttr1 } cardAttr2={ cardInfo.cardAttr2 }\n                    cardAttr3={ cardInfo.cardAttr3 } cardImage={ cardInfo.cardImage }\n                    cardRare={ cardInfo.cardRare } cardTrunfo={ cardInfo.cardTrunfo }\n                  />\n                  <button\n                    id={ cardInfo.cardName }\n                    className=\"deleteBtn\"\n                    type=\"button\"\n                    onClick={ this.deleteDisplayedCard }\n                  >\n                    Excluir\n                  </button>\n                </div>\n              ))}\n            </div>\n          </section>\n        </main>\n          <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}